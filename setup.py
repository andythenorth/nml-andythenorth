#! /usr/bin/env python


import sys, os, string, subprocess
from distutils.core import setup

if sys.version < '2.5':
    sys.exit('ERROR: Sorry, python 2.5 is required for this application.')

# The following version determination code is a greatly simplified version
# of the mercurial repo code. The version is stored in nml/__version__.py

version = ''

if os.path.isdir('.hg'):
    version_list = (subprocess.Popen(['hg', 'id', '-n', '-t'], stdout=subprocess.PIPE).communicate()[0]).split()
    if version_list[0].endswith('+'):
        modified = 'M'
    else:
        modified = ''
    revision = string.rstrip(version_list[0],'+')
    # Test whether we have a tag (=release version)
    if version_list[1] != 'tip':
        version = version_list[1] + modified
    else: # we have a trunk version
        version = 'r'+revision + modified

if version:
    f = open("nml/__version__.py", "w")
    f.write('# this file is autogenerated by setup.py\n')
    f.write('version = "%s"\n' % version)
    f.close()

try:
    from nml import __version__
    version = version
except ImportError:
    version = 'unknown'

setup(name='nml',
      version=version,
      description='A tool to convert nml files to nfo files',
      long_description =
'''A tool to convert nml files to nfo files. NML is a meta-language that aims
to be a lot simpeler to learn and use then nfo.''',
      license='GPLv2',
      classifiers = ['Development Status :: 2 - Pre-Alpha',
                     'Environment :: Console',
                     'Intended Audience :: Developers',
                     'License :: OSI Approved :: GNU General Public License (GPL)',
                     'Operating System :: OS Independent',
                     'Programming Language :: Python',
                     'Topic :: Software Development :: Compilers',
                     ],
      packages=['nml','nml.actions'],
      url='http://dev.openttdcoop.org/projects/nml',
      scripts=['nml2nfo'],
      )
